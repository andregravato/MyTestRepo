//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EntityModel", "FK_SubEntity_0", "MainEntity1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiscTestApplication.DataAdapter.MainEntity1), "SubEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiscTestApplication.DataAdapter.SubEntity), true)]

#endregion

namespace MiscTestApplication.DataAdapter
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EntityModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EntityModelContainer object using the connection string found in the 'EntityModelContainer' section of the application configuration file.
        /// </summary>
        public EntityModelContainer() : base("name=EntityModelContainer", "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(string connectionString) : base(connectionString, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(EntityConnection connection) : base(connection, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MainEntity1> MainEntity1
        {
            get
            {
                if ((_MainEntity1 == null))
                {
                    _MainEntity1 = base.CreateObjectSet<MainEntity1>("MainEntity1");
                }
                return _MainEntity1;
            }
        }
        private ObjectSet<MainEntity1> _MainEntity1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubEntity> SubEntities
        {
            get
            {
                if ((_SubEntities == null))
                {
                    _SubEntities = base.CreateObjectSet<SubEntity>("SubEntities");
                }
                return _SubEntities;
            }
        }
        private ObjectSet<SubEntity> _SubEntities;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MainEntity1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMainEntity1(MainEntity1 mainEntity1)
        {
            base.AddObject("MainEntity1", mainEntity1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubEntities(SubEntity subEntity)
        {
            base.AddObject("SubEntities", subEntity);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="MainEntity1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MainEntity1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MainEntity1 object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MainEntity1 CreateMainEntity1(global::System.Int64 id, global::System.String name)
        {
            MainEntity1 mainEntity1 = new MainEntity1();
            mainEntity1.Id = id;
            mainEntity1.Name = name;
            return mainEntity1;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "FK_SubEntity_0", "SubEntity")]
        public EntityCollection<SubEntity> SubEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubEntity>("EntityModel.FK_SubEntity_0", "SubEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubEntity>("EntityModel.FK_SubEntity_0", "SubEntity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="SubEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubEntity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mainEntity1Id">Initial value of the MainEntity1Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SubEntity CreateSubEntity(global::System.Int64 id, global::System.Int64 mainEntity1Id, global::System.String name)
        {
            SubEntity subEntity = new SubEntity();
            subEntity.Id = id;
            subEntity.MainEntity1Id = mainEntity1Id;
            subEntity.Name = name;
            return subEntity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MainEntity1Id
        {
            get
            {
                return _MainEntity1Id;
            }
            set
            {
                OnMainEntity1IdChanging(value);
                ReportPropertyChanging("MainEntity1Id");
                _MainEntity1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainEntity1Id");
                OnMainEntity1IdChanged();
            }
        }
        private global::System.Int64 _MainEntity1Id;
        partial void OnMainEntity1IdChanging(global::System.Int64 value);
        partial void OnMainEntity1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "FK_SubEntity_0", "MainEntity1")]
        public MainEntity1 MainEntity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainEntity1>("EntityModel.FK_SubEntity_0", "MainEntity1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainEntity1>("EntityModel.FK_SubEntity_0", "MainEntity1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MainEntity1> MainEntity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainEntity1>("EntityModel.FK_SubEntity_0", "MainEntity1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MainEntity1>("EntityModel.FK_SubEntity_0", "MainEntity1", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
